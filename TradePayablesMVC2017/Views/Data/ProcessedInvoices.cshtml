@model TradePayablesMVC2017.Models.ProcessedInvoicesListModel

@{
    ViewBag.Title = "ProcessedInvoices";
}

<h2>ProcessedInvoices</h2>
<ul>
    <li>@Html.ActionLink("Edit Data", "EditData", "Data")</li>
</ul>

<div class="table-container">
    <table id="processedInvoicesTable" 
           class="table table-striped table-bordered table-hover table-responsive table-condensed table-sm" 
           style="width:100%; display:none">

        <thead>
            <tr>
                <th>Purchasing Document</th>
                <th>Document Header Text</th>
                <th>Assignment</th>

                <th>Vendor</th>
                <th>Invoice Description</th>
                <th>Industry</th>
                <th>Payment Terms</th>

                <th>Amount in Local</th>

                <th>Document Date</th>
                <th>Posting Date</th>
                <th>Payment Date</th>
                <th>Processed</th>

            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Invoices != null)
            {
                foreach (var item in Model.Invoices)
                {
                    <tr data-row-id="@item.PurchasingDocument">
                        @* Add a data-row-id attribute for tracking *@
                        <td class="@((item.Processed != "" && item.Processed != "Processed from Text Column") ? "processed" : "")">
                            @item.PurchasingDocument
                        </td>
                        <td>@item.DocumentHeaderText</td>
                        <td>@item.Assignment</td>

                        <td class="@((item.Processed.Contains("Text Column")) ? "processed" : "")">@item.Vendor</td>
                        <td>@item.InvoiceDescription</td>
                        <td>@item.Industry</td>
                        <td>@item.PaymentTerms</td>

                        <td>@item.AmountLocal</td>

                        <td>@item.DocumentDate</td>
                        <td>@item.PostingDate</td>
                        <td>@item.PaymentDate</td>
                        <td>@item.Processed</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
    @*<button id="saveChangesBtn" class="btn btn-primary" style="margin-top: 20px;">Save Changes</button>*@

    @section scripts {
        <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
        @*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.min.css">
            <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/2.0.8/js/dataTables.min.js"></script>*@

        <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css">
        <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#processedInvoicesTable thead th').each(function () {
                    var title = $(this).text();
                    $(this).html('<div class="filter"> <p>' + title + '</p> <input  type="text"  placeholder ="Search"/> </div>');
                });

                // DataTable initialization
                var table = $('#processedInvoicesTable').DataTable({
                    "paging": true,
                    "searching": true,
                    "ordering": true,
                    "info": true,
                    // Make certain columns editable
                    "columnDefs": [
                        { "targets": [1, 2, 4, 5], "className": "" } // Make Vendor, Industry, Payment Terms, Doc Header Text editable
                    ]
                });

                table.columns().every(function () {
                    var that = this; // Store reference to the column API instance

                    $('input', this.header()).on('keyup change clear', function () {
                        if (that.search() !== this.value) {
                            that
                                .search(this.value)
                                .draw();
                        }
                    });
                });

            });

            $(document).ready(function () {
                $("#processedInvoicesTable").css("display", "block")
            })
        </script>

        <style>
            .processed {
                background-color: burlywood;
            }

            .filter {
                max-width: 100px;
            }

                .filter > input {
                    width: clamp(80px, 100px, 120px); /* Example: min of 80px, preferred 100px, max of 120px */
                }
        </style>
    }
